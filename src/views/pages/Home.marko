import axios from 'axios';
import { navigate } from 'marko-router5'

$ const contextOptions = [
  { actionType:"create", text: "Create new note" },
  { actionType:"facebook", text: "share on facebook" },
  { actionType:"twitter", text: "share on twitter" }
]

class {
  onCreate(input) {
    this.state = {
      notes: [],
      nNotes: [],
      open: false,
      options: ["all","business","sports","Entertainment","politics"],
      selected: ''
    }
  } 
  
  //Get request to get all Notes on page load
  onMount(){
    axios.get("/api/notes")
      .then(data => {
        this.state.notes = data.data.notes
        this.state.nNotes = data.data.notes
      })
      .catch(err => console.log(err.message))
  }

  //Event Emmiter handler for note deleting
  handleDelete(e) {
    let newNotes = this.state.notes.filter(note=> note._id !== e.id)

    this.state.nNotes = newNotes;
  }

  //Toggles Open on state to (true or false)
  handleShow() {
    this.state.open = !this.state.open;
  }

  //Handles filtering by tag selection
  handleSelect(e) {
    this.state.selected = e.target.textContent;
    this.handleShow(); 
    let newNotes = this.state.notes.filter(note=> note.tag === this.state.selected)
    
    this.state.nNotes = newNotes;

    if(this.state.selected === 'all') {
      this.state.nNotes = this.state.notes;
    }
  }

   //Handles what happens when a contextmenu option is clicked
    handleContextAction(actionType) {

        if(actionType === "create") {
          navigate(`/create`)
        }

        if(actionType === "facebook") {
          window.open("https://facebook.com/sharer/sharer.php?u=" + `https://notely.com/notes/${this.input._id}`);
        }

        if(actionType === "twitter") {
          window.open("https://twitter.com/intent/tweet?text=" +
      `Start Creating your Note's using this awesome app check it out https://notely.com/notes/${this.input._id} `);
        }

    }
}


<div class="container">    
  <Header/>
  <ContextMenu contextOptions=contextOptions on-set-action("handleContextAction")>
    
    <div.appInner>
      <div class="tags" name="tags">
        <span class="select-toggle btn" on-click("handleShow")>Filter by tag: ${state.selected}</span>
        <if(state.open)>
          <ul class="options">
            <for|option| of=state.options>
              <li class="option" value=option on-click('handleSelect')>${option}</li>
            </for>
          </ul>
        </if>
      </div>
      <div.notes>
        <if(state.nNotes.length > 0)>
        <for|note| of=state.nNotes>
          <NoteCard ...note on-delete-note("handleDelete")/>
        </for>
        </if>
        <else>
          <h1>No Notes Found</h1>
        </else>
      </div> 
    </div>
  </ContextMenu>
</div>
