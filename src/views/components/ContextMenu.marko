
class {
   //Shows the custom context menu
    setContextMenu(e) {
      e.preventDefault();
     
        //set display of all contextMenu to none prevent context menu showing up on all note cards
        document.querySelectorAll('.contextOptions').forEach(el => el.style.display = "none");
        

        //Get the context menu when the target elements in note card parents first child has the class of contextMenu
        if(e.target.parentElement.parentElement.children[0].classList.contains('contextMenu')) {
            let contextOptions = e.target.parentElement.parentElement.children[0].children[0]

            contextOptions.style.display = 'block'
            contextOptions.style.left = e.offsetX + 'px';
            contextOptions.style.top = e.offsetY + 'px';
          } 
          else if(e.target.parentElement.parentElement.classList.contains('contextMenu')) {
            //Get the context menu when the target elements in note card first child has the class of contextMenu
            let contextOptions = e.target.parentElement.parentElement.children[0]

            contextOptions.style.display = 'block'
            contextOptions.style.left = e.offsetX + 'px';
            contextOptions.style.top = e.offsetY + 'px';
        }
    }
    
    setContextAction(data) {
      this.emit("set-action", data.actionType)
    }

}


<div.contextMenu on-contextmenu("setContextMenu") >
  <ul.contextOptions>
    <for|contextOption| of=input.contextOptions>
      <li.contextOption on-click('setContextAction', contextOption)>${contextOption.text}</li>
    </for>
  </ul>
  <${input.renderBody} />
</div>